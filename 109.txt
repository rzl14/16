/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int vals[20004], idx = -1;
    TreeNode* bulid_tree(int l, int r) {
        if (l > r) return nullptr;
        if (l == r) return new TreeNode(vals[l]);
        int mid = l + r >> 1;
        return new TreeNode(vals[mid], bulid_tree(l, mid - 1), bulid_tree(mid + 1, r));
        return new TreeNode(vals[mid], bulid_tree(l, mid - 1), bulid_tree(mid + 1, r));
    }
    TreeNode* sortedListToBST(ListNode* head) {
        for (ListNode* i = head; i != nullptr; i = i -> next) {
            vals[++ idx] = i -> val;
        }
        if (idx == -1) return nullptr;
        int mid = idx >> 1;
        TreeNode* hh = new TreeNode(vals[mid], bulid_tree(0, mid - 1), bulid_tree(mid + 1, idx));
        return hh;
    }
};