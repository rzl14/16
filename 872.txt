/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root, int stk[], int &tt) {
        if (root == nullptr) return;
        if (root -> left == nullptr && root -> right == nullptr) {
            stk[++ tt] = root -> val;
            return;
        }
        dfs(root -> left, stk, tt);
        dfs(root -> right, stk, tt);
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        int stk1[100], tt1 = -1, tt2 = -1, stk2[100];
        dfs(root1, stk1, tt1);
        dfs(root2, stk2, tt2);
        if (tt1 != tt2) return false;
        for (int i = 0; i <= tt1; i ++) {
            if (stk1[i] != stk2[i]) return false;
        }
        return true;
    }
};