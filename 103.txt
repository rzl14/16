/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if (!root) return {};
        TreeNode* q[2010];
        vector<vector<int>> ans;
        int hh = 0, tt = -1, sz = 1, next_sz = 0, deep = 0;
        q[++ tt] = root;
        while (hh <= tt) {
            ans.push_back({});
            while (sz --) {
                TreeNode* a = q[hh ++];
                ans.back().push_back(a -> val);
                if (a -> left != nullptr) {
                    q[++ tt] = a -> left;
                    next_sz ++;
                }
                if (a -> right != nullptr) {
                    q[++ tt] = a -> right;
                    next_sz ++;
                }
            }
            if (deep % 2) reverse(ans.back().begin(), ans.back().end());
            deep ++;
            sz = next_sz;
            next_sz = 0;
        }
        return ans;
    }
};