/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (head == nullptr || k == 0) return head;
        int n = 0;
        ListNode* i = head;
        while (i != nullptr) {
            n ++;
            i = i -> next;
        }
        k %= n;
        i = head;
        for (int j = 0, b = n - k; j + 1 < b; j ++) {
            i = i -> next;
        }
        ListNode* h = i -> next;
        if (h == nullptr) return head;
        i -> next = nullptr;
        i = h;
        while (i -> next != nullptr) i = i -> next;
        i -> next = head;
        return h;
    }
};