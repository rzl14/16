class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        // int n = nums.size(), j = 0;
        // for (int i = 0, j = 1; i < n; i ++) {
        //     while (j < n && nums[j] == nums[i]) nums[j ++] = 0x3f3f3f3f;
        //     i = j - 1;
        //     j += 1;
        // }
        // sort(nums.begin(), nums.end());
        // while (nums.back() == 0x3f3f3f3f) nums.pop_back();
        // return nums.size();
        int n = nums.size(), i = 0, j = 1;
        while (j < n) {
            // cout << i << j << nums[i] << nums[j] << endl;
            while (j < n && nums[i] == nums[j]) j ++;
            if (j < n) nums[++ i] = nums[j ++];
        }
        return i + 1;
    }
};